# In Emacs org-mode: before exporting, comment this out START
;; Local Variables:
;; ispell-check-comments: exclusive
;; ispell-local-dictionary: "english"
;; End:
# In Emacs org-mode: before exporting, comment this out FINISH

# Org-mode Export LaTeX Customization Notes:
# - Interpret 'bla_bla' as LaTeX Math bla subscript bla: #+OPTIONS ^:t. Interpret literally bla_bla: ^:nil.
# - org export: turn off heading -> section numbering: #+OPTIONS: num:nil
# - org export: change list numbering to alphabetical, sources:
#   - https://orgmode.org/manual/Plain-lists-in-LaTeX-export.html
#   - https://tex.stackexchange.com/a/129960
#   - must be inserted before each list:
#     #+ATTR_LATEX: :environment enumerate
#     #+ATTR_LATEX: :options [label=\alph*)]
# - allow org to recognize alphabetical lists a)...: M-x customize-variable org-list-allow-alphabetical


# -----------------------
# General Export Options:
#+OPTIONS: ^:nil ':nil *:t -:t ::t <:t H:3 \n:nil arch:headline 
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t todo:t |:t

#+OPTIONS: author:nil
#+OPTIONS: num:nil # disable export latex section numbering for org headings
#+OPTIONS: toc:nil # no table of contents (doesn't work if num:nil)

#+TITLE: SiScLab Task4 Deployment
#+DATE: 
#+AUTHOR: Johannes Wasmer
# #+EMAIL: johannes.wasmer@gmail.com
#+LANGUAGE: de
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.2.2 (Org mode 9.1.13)

# ---------------------
# LaTeX Export Options:
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage[top=0.5in,bottom=0.5in,left=1in,right=1in,includeheadfoot]{geometry} % wider page; load BEFORE fancyhdr
#+LATEX_HEADER: \usepackage[inline]{enumitem} % for customization of itemize, enumerate envs
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE: 
#+LATEX_COMPILER: pdflatex
#+DATE: \today

* [[file:SiScLab_Notes.org::*%5B%5Bfile:SiScLab_Task4_Deployment.org%5D%5BPhase%207%20-%20Deployment%5D%5D][Master File]]
* Project Deliverables Overview
  The project deploys three packages for developers, the lower one depends on
  the upper one. *Note: [[https://github.com/JuDFTteam/masci-tools][masci-tools]] itself is already published via PyPi*.
  Perhaps the studentproject18ws should be integrated into that installation.
  Enquire with supervisor if that is the case.
| ~preprocessor~               |
| ~visualization~              |
| ~frontends~                  |
|------------------------------|
| ~Desktop GUI~, ~Jupyter GUI~ |
The GUIs are for end-users and their deployment requires either local executable
installation (Desktop) or remote-hosted app (Juyter).

* Package Deployment
** Via PyPi (ie, ~pip~)
Guides:
  - [[link][medium.com - Publish a package to PyPi]]
  - [[https://blog.jetbrains.com/pycharm/2017/05/how-to-publish-your-package-on-pypi/][jetrains.com - Publish to PyPi using PyCharm]]
** Via Anaconda (ie, ~conda~)
Guides:
  - [[https://conda-forge.org/docs/recipe.html#step-by-step-instructions][conda-forge doc > Step-by-step Instructions]]
  - [[http://mlg.eng.cam.ac.uk/hoffmanm/blog/2016-02-25-conda-build/][mwhoffman - publish via conda on your own channel]]
* Python Desktop GUI Deployment
- Probably using [[https://www.pyinstaller.org/][Pyinstaller]] (via [[https://stackoverflow.com/a/2937][StackOverflow]] <  [[https://www.google.com/search?client=ubuntu&channel=fs&q=deploy+tkinter+application&ie=utf-8&oe=utf-8][search 'deploy tkinter application']])
* Jupyter Dashboard Deployment
- first see [[file:SiScLab_Task2-BuildABrowser-BasedDashboard.org][Guide: Build a Python Web Dashboard]]
Options:
| mybinder.org |                                                                   |
| aiidalab     | first develop on quantum mobile, if it works, add to app registry |
| [[https://github.com/QuantStack/voila][voila]]        | see below                                                         |
** aiidalab
- see [[file:SiScLab_AiiDa_Installation_Notes.org::*<2019-02-15%20Fri>%20PyPi%20Install%20of%20%5B%5Bhttps://pypi.org/project/aiidalab/%5D%5Baiidalab%5D%5D][<2019-02-15 Fri> PyPi Install of aiidalab]] first
- the idea here is to eventually register my jupyter dashboard as an aiidalab
  app and host it on [[https://aiidalab.materialscloud.org/hub/login][aiidalab@materialscloud.org]]. That way, anyone with an
  account there can access it and no need to setup a server yourself. But first
  have to get the dashboard working as an aiidalab app.
- okay, options for trying to getting my jupyter dashboard running on aiidalab:
  - register on [[https://aiidalab.materialscloud.org/hub/login][aiidalab@materialscloud.org]]. not needed for now:
  - get it working in the aiidalab in my local [[https://www.materialscloud.org/work/quantum-mobile][quantum mobile virtual machine]],
    see [[file:SiScLab_AiiDa_Installation_Notes.org][AiiDa Installation Notes]] first. Problem: very slow. So first try:
  - use my PyPi AiidaLab installation. See also in the install notes.

The problem with that is: aiidalab requires Python 2, yet the whole project ist
written in Python 3. Have to convert it back to Python 2 first. Use the tool
=3to2= for that ([[https://pypi.org/project/3to2/#history][PyPI 3to2]], [[https://anaconda.org/Cantera/3to2][conda 3to2]], [[https://stackoverflow.com/questions/34168019/how-to-use-3to2][SO How to use 3to2]]).

** [[https://github.com/QuantStack/voila][voila]]
- tried it out: works out of the box. renders as html page. 
- for single 
