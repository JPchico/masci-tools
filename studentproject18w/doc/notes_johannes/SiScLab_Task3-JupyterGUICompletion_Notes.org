# In Emacs org-mode: before exporting, comment this out START
;; Local Variables:
;; ispell-check-comments: exclusive
;; ispell-local-dictionary: "english"
;; End:
# In Emacs org-mode: before exporting, comment this out FINISH

# Org-mode Export LaTeX Customization Notes:
# - Interpret 'bla_bla' as LaTeX Math bla subscript bla: #+OPTIONS ^:t. Interpret literally bla_bla: ^:nil.
# - org export: turn off heading -> section numbering: #+OPTIONS: num:nil
# - org export: change list numbering to alphabetical, sources:
#   - https://orgmode.org/manual/Plain-lists-in-LaTeX-export.html
#   - https://tex.stackexchange.com/a/129960
#   - must be inserted before each list:
#     #+ATTR_LATEX: :environment enumerate
#     #+ATTR_LATEX: :options [label=\alph*)]
# - allow org to recognize alphabetical lists a)...: M-x customize-variable org-list-allow-alphabetical


# -----------------------
# General Export Options:
#+OPTIONS: ^:nil ':nil *:t -:t ::t <:t H:3 \n:nil arch:headline 
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t todo:t |:t

#+OPTIONS: author:nil
#+OPTIONS: num:nil # disable export latex section numbering for org headings
#+OPTIONS: toc:nil # no table of contents (doesn't work if num:nil)

#+TITLE: SiScLab_Task3-JupyterGUICompletion_Notes
#+DATE: <2019-01-15 Tue>
#+AUTHOR: Johannes Wasmer
# #+EMAIL: johannes.wasmer@gmail.com
#+LANGUAGE: de
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.2.2 (Org mode 9.1.13)

# ---------------------
# LaTeX Export Options:
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage[top=0.5in,bottom=0.5in,left=1in,right=1in,includeheadfoot]{geometry} % wider page; load BEFORE fancyhdr
#+LATEX_HEADER: \usepackage[inline]{enumitem} % for customization of itemize, enumerate envs
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE: 
#+LATEX_COMPILER: pdflatex
#+DATE: \today


This is a list of unfinished subtasks for the completion of the project's
Jupyter dashboard (GUI) up to the project presentation on <2019-01-25 Fri>.

* [[file:SiScLab_Notes.org::*%5B%5Bfile:SiScLab_Task3-JupyterGUICompletion_Notes.org%5D%5BPhase%204%20-%20Jupyter%20GUI%20Completion%5D%5D][Master File]]
* DONE =plot.py=: ~setup_plot~ problem
  CLOSED: [2019-01-15 Tue 16:25]
- labels don't get set on plot
- only works if the ~setup_plot~ stuff is called inside the Jupyter ~@interact~
  function ~update_plot~
- DONE: wrote documentation with example on correct usage. removed from
  ~__init__~ method.
* DONE Widget: y-axis range
  CLOSED: [2019-01-15 Tue 19:14]
- because need know ylim before first plotting to set slider range, cannot get
  it from ~plt~ or ~ax~. Instead, added fct ~get_data_ylim~ to ~plot.py~
  classes.
* DONE Widget: ignore_atoms_per_group
  CLOSED: [2019-01-16 Wed 13:58]
takes weight away in tensor product or sth.
* DONE Widget: spin selection
  CLOSED: [2019-01-16 Wed 16:28]
* TODO Widget: File Chooser
** TODO Review Jupyter File chooser solutions
see [[file:../../jupyter/Example_FileChoosers.ipynb][dedicated notebook]].

Update <2019-02-15 Fri>:
- found [[https://github.com/peteut/ipython-file-upload][ipython-file-upload]] widget used in [[https://github.com/aiidalab/aiidalab-widgets-base/blob/master/aiidalab_widgets_base/structures.py][aiidalab-widgets]] (example see
  aiidalab or quantum mobile virtual machine). Perhaps this is better! (could be
  not working with jupyterlab, but no matter)

install_log:
#+BEGIN_SRC shell
source activate masci-tools
pip install fileupload
jupyter nbextension install fileupload --user --py
jupyter nbextension enable fileupload --user --py
#+END_SRC

:install_log_fileupload:
#+BEGIN_EXAMPLE
Installing /home/johannes/anaconda3/envs/masci-tools/lib/python3.6/site-packages/fileupload/static -> fileupload
Making directory: /home/johannes/.local/share/jupyter/nbextensions/fileupload/
Copying: /home/johannes/anaconda3/envs/masci-tools/lib/python3.6/site-packages/fileupload/static/extension.js -> /home/johannes/.local/share/jupyter/nbextensions/fileupload/extension.js
Copying: /home/johannes/anaconda3/envs/masci-tools/lib/python3.6/site-packages/fileupload/static/widget.js -> /home/johannes/.local/share/jupyter/nbextensions/fileupload/widget.js
Making directory: /home/johannes/.local/share/jupyter/nbextensions/fileupload/fileupload
Copying: /home/johannes/anaconda3/envs/masci-tools/lib/python3.6/site-packages/fileupload/static/fileupload/widget.js -> /home/johannes/.local/share/jupyter/nbextensions/fileupload/fileupload/widget.js
- Validating: OK

    To initialize this nbextension in the browser every time the notebook (or other app) loads:
    
          jupyter nbextension enable fileupload --user --py
#+END_EXAMPLE
:END:

** TODO Integrate into working solution
* TODO Dashboard Layout
** DONE Replace =@interact= with =interactive=
   CLOSED: [2019-01-16 Wed 00:26]
- [[https://stackoverflow.com/a/48349991][Nice example: put widgets including plot into a layout container]]
- got a dashboard layout working for the control widgets with the plot above.
  see notebook banddos07. Produced with trial and error. It IS plotting, but it
  is approximately 100x times slower than the version with =@interact= in
  banddos05.
- WHY? Probably because I use ~plt.show()~ now. or perhaps because bandddos07 is
  so full with redundant layout definitions. perhaps try to isolate the working
  code in a new banddos08, and try with that.
- UPDATE: restarted jupyter-lab. Now the dashboard version banddos07 is as fast
  as banddos05. 
** Find some resources on jupyter-widgets dashboarding
- found:  [[https://github.com/JuanCab/AstroInteractives][JuanCab/AstroInteractives]] 
- side notes: 
  - don't forget: just learned that pyviz panel -> param works both with tkinter
    and jupyter. would be nice to rebase whole code on that.
  - would LIKE to try out better alternatives to matplotlib (bqplot, holoviews,
    bokeh, pyplot). but no time...
  - don't forget: just learned about new deployment options like voila, see
    guide
** DONE Simple Layout: Bandplot Widgets in a =HBox=
   CLOSED: [2019-01-16 Wed 13:11]
see above.
** DONE Advanced Layout: Dashboard
   CLOSED: [2019-01-16 Wed 13:11]
see above.
** TODO Cleanup dashboard layout code
** DONE Integrate newer widgets from this list
*** DONE [[*Widget: ignore_atoms_per_group][Widget: ignore_atoms_per_group]]
*** DONE [[*Widget: spin selection][Widget: spin selection]]
*** TODO [[*Widget: File Chooser][Widget: File Chooser]]
** TODO [#C] Try out if putting mpl figure inside a widget is helpful
- see [[file:SiScLab_Task2-JupyterWidgets_Notes.org::*Is%20it%20possible%20to%20put%20a%20matplotlib%20plot%20inside%20an%20ipywidgets%20container?][Is it possible to put a matplotlib plot inside an ipywidgets container?]]
** TODO [#C] Try out if matplotlib can be replaced with other 2D plotter
In descending priority:
- bqplot (cause good integration with ipywidgets)
- mpld3 (only works in notebook not lab for now)
- holoviews (e.g. together with PyViz Panel)
- bokeh (probably have to use bokeh widgets then)
- plotly
** TODO [#C] Try out if ipywidgets can be replaced with other widgets lib
In descending priority:
- PyViz Panel + Param (Param is a dataviz definer and independent of particular
  frontend. *In particular, it is supported by Tkinter*. So could even use
  common code base for the definition of the GUI.
* BandDOS Plot Layout Integration
** DONE Proof-of-concept Implementation
   CLOSED: [2019-01-09 Wed]
- see =banddos06=. just side-by-side matplotlib plot without any formatting or
  widget linking or axis alignment
** DONE Nice matplotlib formatting of both side-by-side plots
   CLOSED: [2019-01-18 Fri 19:59]
gridspec
** DONE Fix ~get_dos~: pre-check if all =spdf= are present
   CLOSED: [2019-01-18 Fri 19:59]
- Co and MoSe2 DOS file examples both have only =spd= characters, so not a full
  set =spdf= set.
- The DOS file reader ~get_dos~ must pre-check that and in case should insert
  missing zero columns. otherwise the plotting will throw errors due to index
  out of bounds access.
- First need to get a bit of data on the DOS file format.
:source_code:
#+BEGIN_SRC python
# find out: DOS file column numbers, vs. band file number of groups and characters
from collections import namedtuple

Info = namedtuple('Info', ['DOS_columns', 'band_groups', 'band_characters'])
Infos = {'mose' : None, 'co1' : None, 'co2' : None}
dosdata = {
    'mose' : ['..', 'data', 'input', 'MoSe2', "DOS.1"],
    'co1': ['..', 'data', 'input', 'Co', "DOS.1"],
    'co2': ['..', 'data', 'input', 'Co', "DOS.2"]
}
for k,v in dosdata.items():
    dosdata[k] = os.path.join(*v)
    dosdata[k] = np.genfromtxt(dosdata[k]).T
    print(f"{k} columns x rows: {dosdata[k].shape}")

# # with pandas instead numpy:
# import pandas as pd
# df = pd.read_csv(test_dospath, sep='\s+')
# header = df.columns[1:] if (df.columns[0].startswith('#')) else df.columns
# df = pd.read_csv(test_dospath, sep='\s+', comment='#', header=None).T

banddata_paths = {
    'mose' : ['..', 'data', 'input', 'MoSe2', "banddos_2spin.hdf"],
    'co': ['..', 'data', 'input', 'Co', "banddos_Co.hdf"],
}
banddata = {}
for k,v in banddata_paths.items():
    banddata_paths[k] = os.path.join(*v)
    reader = Reader(banddata_paths[k])
    with reader as h5file:
        banddata[k] = reader.read(recipe=Recipes.Bands)
        banddata[k].move_datasets_to_memory()
    print(f"banddata {k}: num_groups {banddata[k].num_groups}")
    print(f"banddata {k}: num_chars {banddata[k].num_char}")
    


Infos['mose'] = Info(
    DOS_columns=dosdata['mose'].shape[0], 
    band_groups=banddata['mose'].num_groups, 
    band_characters=banddata['mose'].num_char)
Infos['co1'] = Info(
    DOS_columns=dosdata['co1'].shape[0], 
    band_groups=banddata['co'].num_groups, 
    band_characters=banddata['co'].num_char)
Infos['co2'] = Info(
    DOS_columns=dosdata['co2'].shape[0], 
    band_groups=banddata['co'].num_groups, 
    band_characters=banddata['co'].num_char)

print(f"MoSe2: num_groups * 5 + 5 = {Infos['mose'].band_groups} * 5 + 5 = {Infos['mose'].band_groups * 5 + 5}")
print(f"MoSe2: DOS_columns {Infos['mose'].DOS_columns}")
print(f"Co   : num_groups * 5 + 5 = {Infos['co1'].band_groups} * 5 + 5 = {Infos['co1'].band_groups * 5 + 5}")
print(f"Co   : DOS_columns {Infos['co1'].DOS_columns}")
#+END_SRC
:END:

Output:
#+BEGIN_EXAMPLE
mose columns x rows: (95, 1302)
co1 columns x rows: (15, 1301)
co2 columns x rows: (15, 1301)
banddata mose: num_groups 18
banddata mose: num_chars 4
banddata co: num_groups 2
banddata co: num_chars 4
MoSe2: num_groups * 5 + 5 = 18 * 5 + 5 = 95
MoSe2: DOS_columns 95
Co   : num_groups * 5 + 5 = 2 * 5 + 5 = 15
Co   : DOS_columns 15
But MoSe2 and Co DOS files both do only have spd and not spdf set of characters
#+END_EXAMPLE

Column selection examples for DOS file Co (2 atom groups, 15 columns), all atom groups selected:
| all_characters | character | columns selected |
|----------------+-----------+------------------|
| X              | -         | [5,6]            |
| -              | s         | [8,9]            |
| -              | p         | [10,11]          |
| -              | d         | [12,13]          |
| -              | f         | [14,15]          |
So column 7 is never selected.

Column selection examples for DOS file MoSe2 (18 atom groups, 95 columns), all atom groups selected:
| all_characters | character | columns selected                                                         |
|----------------+-----------+--------------------------------------------------------------------------|
| X              | -         | [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]      |
| -              | s         | [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41] |
| -              | p         | [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59] |
| -              | d         | [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77] |
| -              | f         | [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95] |
So column 23 is never selected.

- Amending the initial problem statement.
- It seems that spdf are all present at least in the available DOS files.
- The problem seems more that the indexing based on character selection is off.

- Changed ~get_dos()~ so as to be more readable and mention the problem clearly. From there:
#+BEGIN_SRC python
# the DOS file format has three sections:
# - 5 columns: E, dos_tot, interstitial, vac1, vac2;
# - num_groups columns: dos for all characters per atoms group,
# - 4 * num_groups columns: (dos per atoms group) per character.
#   - so section3 has 4 subsections each of length num_groups.

bad_hack_offset = 1
dos += col(index['section3'][char][group] + bad_hack_offset) * atoms_per_group[group]
# Note 1:
# Introduced bad_hack_offset of 1 cause when comparing bandplot to DOS plot,
# they seem to match only if this offset is added.
# But if the DOS file format above is correct, the consequences are:
# - DOS of (character 0 (s of spdf), group 0) is never accessed.
# - DOS of (last character (f), last group) is out-of-bounds, so returns zero.
# - all other DOS are shifted:
#    - DOS of (char x, group y+1) is reassigned to (char x, group y)
#    - DOS of (char x+1,  group 0) is reassigned to (char x, last group)
# This can't be correct.
#
# Note 2:
# For the summed DOS plot size (all groups, all characters), the following holds:
# section3 with bad_hack_offset < section2 < section3 without bad_hack_offset.
#+END_SRC

** DONE Integrate banddos plot into dashboard
   CLOSED: [2019-01-21 Mon 21:29]
** TODO Interactive DOS plot de-/activation based on [[*DOS file chooser][DOS file chooser]]
** DONE Widgets (masks) linking to DOS plot:
   CLOSED: [2019-01-21 Mon 21:30]
*** DONE NEW: interstitial (DOS-specific)
    CLOSED: [2019-01-18 Fri 20:00]
*** DONE link: =select_groups=
    CLOSED: [2019-01-18 Fri 20:00]
*** DONE link: =select_spins= (1 or 2 DOS files, switch data for plot)
    CLOSED: [2019-01-21 Mon 21:30]
* DONE Abstractify Plotter classes into Tools and Applications using ABC
  CLOSED: [2019-01-21 Mon 21:31]
- intent: one base of abstract application plots to implement for different plotting libraries like matplotlib
- composability of application plot types, like band+DOS -> bandDOS plot
- hide away as much logic inside the plot class as possible while still being
  general enough to be usable by every frontend (tk, jupyter, ...)
* TODO Plot File Export
** TODO export =tex= file with plot selections
- Idea for easy implementation:
  #+BEGIN_SRC python
  export_settings =
     """
     File: {},
     Bands: {},
     ...,
     Date: {}
     """

  def export_create_settings_output():
     export_settings.format(
        filename,
        select_bands.value,
        # ...
     )
  #+END_SRC
  Then just export that string, in Tkinter e.g. as a file, in Jupyter e.g.
  inside an ipywidgets =Output= widget.
** TODO Widget: Plot Title
** TODO Matplotlib output format PDF
- see [[https://ipython.readthedocs.io/en/stable/interactive/magics.html][ipython magics -> %matplotlib]] -> =set_matplotlib_formats=
* TODO Compare2Characters: add colorbar
- help: see [[https://matplotlib.org/api/_as_gen/matplotlib.pyplot.colorbar.html][here]]

* TODO AtomsGroup plot
** DONE Highlight Selected AtomsGroups 
   CLOSED: [2019-01-09 Wed]
** DONE AtomsGroup Selection Widget: ElementName labels
   CLOSED: [2019-01-21 Mon 21:33]
** TODO Plot: Coloring by AtomsGroup
** TODO Plot: Coloring by Element, plus switcher
* TODO Other stuff 
** TODO if not present: hide unfolding_weight selection widget
** DONE Sodium.hdf: Reproduce band selection error
*** DONE Jupyter Frontend
Update: This bug hasn't been occurred for ~2 weeks in the latest versions, so
probably removed.

Happened once in Python around development stage of notebook banddos05. Couldn't
reproduce so far. But in Praneeth's Tk it happens all the time, sometimes yes,
sometimes no, regardless of file. It happens there when an odd select_bands min
and max value are selected. Couldn't reproduce that programmatically (in
hdf/reader) either.

- error: =ValueError: cannot reshape array of size 1996 into shape (2495,)=
- error: =ValueError: cannot reshape array of size 1996 into shape (3992,)=
- =(3992,)= is the shape of each of ~(k_r, E_r, W_r) = data.reshape_data()~
:error_output_jupyter:
#+BEGIN_EXAMPLE
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
~/anaconda3/envs/masci-tools/lib/python3.6/site-packages/ipywidgets/widgets/interaction.py in update(self, *args)
    249                     value = widget.get_interact_value()
    250                     self.kwargs[widget._kwarg] = value
--> 251                 self.result = self.f(**self.kwargs)
    252                 show_inline_matplotlib_plots()
    253                 if self.auto_display and self.result is not None:

<ipython-input-15-d7b15281026e> in update_plot(bands, characters, groups, unfolding_weight_exponent, marker_size, compare_characters, ylim)
     33 
     34     plot(mask_bands, mask_characters, mask_groups, spin, 
---> 35          unfolding_weight_exponent, compare_characters, ax, ignore_atoms_per_group, marker_size)
     36 
     37 #     if is_initial_plot:

<ipython-input-6-be4fe14fc992> in plot(mask_bands, mask_characters, mask_groups, spin, unfolding_weight_exponent, isCharacterPlot, ax, ignore_atoms_per_group, marker_size)
      9     else:
     10         bandplotter.bands(mask_bands, mask_characters, mask_groups, spin, unfolding_weight_exponent, 
---> 11                           ax, alpha, ignore_atoms_per_group, marker_size)
     12 

~/Desktop/Studium/Kurse_RWTH/SiScLab/18W/repos/masci-tools/studenproject18ws/plot/plot.py in bands(self, mask_bands, mask_characters, mask_groups, spin, unfolding_weight_exponent, ax, alpha, ignore_atoms_per_group, marker_size)
    116         color = "blue"
    117         (k_r, E_r, W_r) = self.data.reshape_data(mask_bands, mask_characters, mask_groups, spin,
--> 118                                                  unfolding_weight_exponent, ignore_atoms_per_group)
    119 
    120         # just plot points with minimal size of t

~/Desktop/Studium/Kurse_RWTH/SiScLab/18W/repos/masci-tools/studenproject18ws/hdf/output_types.py in reshape_data(self, mask_bands, mask_characters, mask_groups, spin, unfolding_weight_exponent, ignore_atoms_per_group)
    204 
    205         evs_resh = np.reshape(evs, Nk * Ne)
--> 206         weight_resh = np.reshape(total_weight[0].T, Nk * Ne)
    207         k_resh = np.tile(self.k_distances, Ne)
    208         return (k_resh, evs_resh, weight_resh)

~/anaconda3/envs/masci-tools/lib/python3.6/site-packages/numpy/core/fromnumeric.py in reshape(a, newshape, order)
    277            [5, 6]])
    278     """
--> 279     return _wrapfunc(a, 'reshape', newshape, order=order)
    280 
    281 

~/anaconda3/envs/masci-tools/lib/python3.6/site-packages/numpy/core/fromnumeric.py in _wrapfunc(obj, method, *args, **kwds)
     49 def _wrapfunc(obj, method, *args, **kwds):
     50     try:
---> 51         return getattr(obj, method)(*args, **kwds)
     52 
     53     # An AttributeError occurs if the object does not have

ValueError: cannot reshape array of size 1996 into shape (2495,)
#+END_EXAMPLE
:END:

*** DONE Tkinter
Praneeth said <2019-01-24 Do> the bug does not occur anymore in Tkinter as well.
